# Generated by Django 4.1.3 on 2024-05-12 05:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='個人_Table',
            fields=[
                ('個人_id', models.IntegerField(primary_key=True, serialize=False)),
                ('姓名', models.TextField()),
            ],
            options={
                'db_table': '個人_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='個人_群組_LinkTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': '個人_群組_link_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='個人帳目_收入_支出_Table',
            fields=[
                ('個人帳目_id', models.IntegerField(db_column='個人帳目_ID', primary_key=True, serialize=False)),
                ('項目名稱', models.TextField(blank=True, null=True)),
                ('交易類型_收入_支出', models.TextField(blank=True, null=True)),
                ('日期', models.TextField(blank=True, null=True)),
                ('地點', models.TextField(blank=True, null=True)),
                ('金額', models.TextField(blank=True, null=True)),
                ('詳細資訊_備註', models.TextField(blank=True, null=True)),
                ('是否完成確認動作', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': '個人帳目_收入_支出_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='分帳資訊_應收_應付_Table',
            fields=[
                ('分帳資訊_id', models.IntegerField(db_column='分帳資訊_ID', primary_key=True, serialize=False)),
                ('金額', models.TextField(blank=True, null=True)),
                ('預先付錢', models.CharField(blank=True, max_length=45, null=True)),
                ('是否付清_還錢', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': '分帳資訊_應收_應付_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='子類別_個人_Table',
            fields=[
                ('子類別_個人_id', models.IntegerField(db_column='子類別_個人_ID', primary_key=True, serialize=False)),
                ('子類別名稱', models.TextField()),
                ('子類別描述', models.TextField()),
            ],
            options={
                'db_table': '子類別_個人_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='子類別_群組_Table',
            fields=[
                ('子類別_群組_id', models.IntegerField(db_column='子類別_群組_ID', primary_key=True, serialize=False)),
                ('子類別名稱', models.TextField()),
                ('子類別描述', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': '子類別_群組_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='群組_Table',
            fields=[
                ('群組_id', models.IntegerField(db_column='群組_ID', primary_key=True, serialize=False)),
                ('群組名稱', models.TextField()),
            ],
            options={
                'db_table': '群組_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='群組_類別_LinkTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': '群組_類別_link_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='群組帳目_Table',
            fields=[
                ('群組帳目_id', models.IntegerField(primary_key=True, serialize=False)),
                ('項目名稱', models.TextField()),
                ('交易類型_收入_支出', models.TextField()),
                ('日期', models.TextField()),
                ('地點', models.TextField()),
                ('金額', models.TextField()),
                ('詳細資訊_備註', models.TextField()),
                ('是否完成確認動作', models.TextField()),
            ],
            options={
                'db_table': '群組帳目_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='類別_個人_Table',
            fields=[
                ('類別_個人_id', models.IntegerField(db_column='類別_個人_ID', primary_key=True, serialize=False)),
                ('類別名稱', models.TextField()),
                ('類別描述', models.TextField()),
            ],
            options={
                'db_table': '類別_個人_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='類別_群組_Table',
            fields=[
                ('類別_群組_id', models.IntegerField(db_column='類別_群組_ID', primary_key=True, serialize=False)),
                ('類別名稱', models.TextField()),
                ('類別描述', models.TextField()),
            ],
            options={
                'db_table': '類別_群組_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='個人_類別_LinkTable',
            fields=[
                ('類別_個人', models.OneToOneField(db_column='類別_個人_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='line_bot_app.類別_個人_table')),
            ],
            options={
                'db_table': '個人_類別_link_table',
                'managed': False,
            },
        ),
    ]
